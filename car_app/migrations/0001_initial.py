# Generated by Django 5.0.6 on 2024-06-03 11:46

import django.core.validators
import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название категории')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='URL категории')),
                ('description', models.TextField(max_length=300, verbose_name='Описание категории')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='car_app.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'app_categories',
            },
        ),
        migrations.CreateModel(
            name='Auto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_car', models.CharField(max_length=255, verbose_name='ID авто')),
                ('link', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='URL')),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена в USD')),
                ('price_byn', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена в BYN')),
                ('price_eur', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена в EUR')),
                ('price_rub', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена в RUB')),
                ('city_location', models.CharField(max_length=255, verbose_name='Город')),
                ('description', models.TextField(verbose_name='Описание')),
                ('exchange', models.BooleanField(default=False, verbose_name='Обмен')),
                ('organization', models.CharField(max_length=255, verbose_name='Организация')),
                ('year', models.CharField(max_length=255, verbose_name='Год выпуска авто')),
                ('brand', models.CharField(max_length=255, verbose_name='Бренд')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('condition', models.CharField(max_length=255, verbose_name='Состояние')),
                ('alloy_wheels', models.BooleanField(default=False, verbose_name='Литые диски')),
                ('abs', models.BooleanField(default=False, verbose_name='Система безопасности ABS')),
                ('esp', models.BooleanField(default=False, verbose_name='Система безопасности ESP')),
                ('anti_slip_system', models.BooleanField(default=False, verbose_name='Система безопасности антипробуксовочная')),
                ('immobilizer', models.BooleanField(default=False, verbose_name='Система безопасности иммобилайзер')),
                ('front_safebags', models.BooleanField(default=False, verbose_name='Подушки передние')),
                ('side_safebags', models.BooleanField(default=False, verbose_name='Подушки боковые')),
                ('rear_safebags', models.BooleanField(default=False, verbose_name='Подушки задние')),
                ('rain_detector', models.BooleanField(default=False, verbose_name='Датчик дождя')),
                ('rear_view_camera', models.BooleanField(default=False, verbose_name='Камера заднего вида')),
                ('parktronics', models.BooleanField(default=False, verbose_name='Парктроники')),
                ('hatch', models.BooleanField(default=False, verbose_name='Люк')),
                ('cruise_control', models.BooleanField(default=False, verbose_name='Круиз-контроль')),
                ('steering_wheel_media_control', models.BooleanField(default=False, verbose_name='Управление мультимедиа с руля')),
                ('electro_seat_adjustment', models.BooleanField(default=False, verbose_name='Электрорегулировка сидений')),
                ('front_glass_lift', models.BooleanField(default=False, verbose_name='Передние электро-стеклоподъёмники')),
                ('rear_glass_lift', models.BooleanField(default=False, verbose_name='Задние электро-стеклоподъёмники')),
                ('seat_heating', models.BooleanField(default=False, verbose_name='Обогрев сидений')),
                ('mirror_heating', models.BooleanField(default=False, verbose_name='Обогрев зеркал')),
                ('steering_wheel_heating', models.BooleanField(default=False, verbose_name='Обогрев руля')),
                ('climate_control', models.BooleanField(default=False, verbose_name='Климат-контроль')),
                ('aux_ipod', models.BooleanField(default=False, verbose_name='AUX или iPod')),
                ('bluetooth', models.BooleanField(default=False, verbose_name='Bluetooth')),
                ('cd_mp3_player', models.BooleanField(default=False, verbose_name='CD или MP3')),
                ('usb', models.BooleanField(default=False, verbose_name='USB')),
                ('media_screen', models.BooleanField(default=False, verbose_name='Мультимедийный экран')),
                ('xenon_lights', models.BooleanField(default=False, verbose_name='Ксеноновые фары')),
                ('fog_lights', models.BooleanField(default=False, verbose_name='Противотуманные фары')),
                ('led_lights', models.BooleanField(default=False, verbose_name='Светодиодные фары')),
                ('generation', models.CharField(max_length=255, verbose_name='Поколение')),
                ('number_of_seats', models.CharField(max_length=255, verbose_name='Количество мест')),
                ('engine_capacity', models.CharField(max_length=255, verbose_name='Мощность двигателя')),
                ('engine_type', models.CharField(max_length=255, verbose_name='Тип двигателя')),
                ('transmission_type', models.CharField(max_length=255, verbose_name='Тип передачи')),
                ('generation_with_years', models.CharField(max_length=255, verbose_name='Поколение и год авто')),
                ('interior_color', models.CharField(max_length=255, verbose_name='Цвет интерьера')),
                ('interior_material', models.CharField(max_length=255, verbose_name='Материал интерьера')),
                ('body_type', models.CharField(max_length=255, verbose_name='Тип автомобиля')),
                ('drive_type', models.CharField(max_length=255, verbose_name='Тип трансмиссии')),
                ('color', models.CharField(max_length=255, verbose_name='Цвет авто')),
                ('mileage_km', models.CharField(max_length=255, verbose_name='Километраж ')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время добавления')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('draft', 'Черновик')], default='published', max_length=10, verbose_name='Статус поста')),
                ('fixed', models.BooleanField(default=False, verbose_name='Зафиксировано')),
                ('thumbnail', models.ImageField(blank=True, upload_to='images/thumbnails/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'webp', 'jpeg', 'gif'))], verbose_name='Превью объявления')),
                ('seller', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='author_post', to=settings.AUTH_USER_MODEL, verbose_name='Продавец')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='articles', to='car_app.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
                'ordering': ['-fixed', '-time_create'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField(max_length=255, unique=True)),
                ('auto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='car_app.auto')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddIndex(
            model_name='auto',
            index=models.Index(fields=['-fixed', '-time_create', 'status'], name='car_app_aut_fixed_887cbc_idx'),
        ),
    ]
